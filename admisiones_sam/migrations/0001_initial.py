# -*- coding: utf-8 -*-
# Generated by Django 1.10.2 on 2017-09-26 20:25
from __future__ import unicode_literals

import admisiones_sam.models
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import django_countries.fields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AcademicSecretary',
            fields=[
                ('id_secretary', models.AutoField(primary_key=True, serialize=False)),
                ('state', models.CharField(blank=True, max_length=2, null=True)),
                ('observations', models.CharField(blank=True, max_length=150, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='AccountingDepartment',
            fields=[
                ('id_accounting', models.AutoField(primary_key=True, serialize=False)),
                ('state', models.BooleanField(default=True)),
                ('observations', models.CharField(max_length=150)),
            ],
        ),
        migrations.CreateModel(
            name='Applications',
            fields=[
                ('id_applications', models.AutoField(primary_key=True, serialize=False)),
                ('type_student', models.CharField(choices=[(b'NEW', b'Nuevo'), (b'OLD', b'Con Hermanos')], default=b'NEW', max_length=3)),
                ('date_application', models.DateTimeField(default=django.utils.timezone.now)),
                ('name_student', models.CharField(max_length=25)),
                ('surname_student', models.CharField(max_length=25)),
                ('gender_student', models.CharField(choices=[(b'F', b'Femenino'), (b'M', b'Masculino')], default=b'F', max_length=1)),
                ('birth_date', models.DateField()),
                ('birth_country', django_countries.fields.CountryField(max_length=2)),
                ('country_home', django_countries.fields.CountryField(max_length=2)),
                ('applied_grade', models.CharField(choices=[('Inicial 1 (de 2 a 3 a\xf1os)', 'Inicial 1 (de 2 a 3 a\xf1os)'), ('Inicial 2 (de 3 a 4 a\xf1os)', 'Inicial 2 (de 3 a 4 a\xf1os)'), ('Preb\xe1sica / Prekinder', 'Preb\xe1sica / Prekinder'), ('1ero de B\xe1sica / Kinder', '1ero de B\xe1sica / Kinder'), ('2do de B\xe1sica / 1st Grade', '2do de B\xe1sica / 1st Grade'), ('3ro de B\xe1sica / 2nd Grade', '3ro de B\xe1sica / 2nd Grade'), ('4to de B\xe1sica / 3rd Grade', '4to de B\xe1sica / 3rd Grade'), ('5to de B\xe1sica / 4th Grade', '5to de B\xe1sica / 4th Grade'), ('6to de B\xe1sica / 5th Grade', '6to de B\xe1sica / 5th Grade'), ('7mo de B\xe1sica / 6th Grade', '7mo de B\xe1sica / 6th Grade'), ('8vo de B\xe1sica / 7th Grade', '8vo de B\xe1sica / 7th Grade'), ('9no de B\xe1sica / 8th Grade', '9no de B\xe1sica / 8th Grade'), ('10mo de B\xe1sica / 9th Grade', '10mo de B\xe1sica / 9th Grade'), ('1ro de Bachillerato / 10th Grade', '1ro de Bachillerato / 10th Grade'), ('2do de Bachillerato / 11th Grade', '2do de Bachillerato / 11th Grade'), ('3ro de Bachillerato / 12th Grade', '3ro de Bachillerato / 12th Grade')], max_length=50, verbose_name='Nivel al que aplica')),
                ('name_tutor', models.CharField(max_length=25)),
                ('surname_tutor', models.CharField(max_length=25)),
                ('mail_tutor', models.EmailField(max_length=254)),
                ('phone_tutor', models.CharField(max_length=9, validators=[django.core.validators.RegexValidator(message='Ingrese su tel\xe9fono en el formato 022345678.', regex=b'^0+\\d{8}$')], verbose_name='Tel\xe9fono de Domicilio del Representante')),
                ('cell_tutor', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator(message='Ingrese su celular en el formato 0990909090.', regex=b'^0+\\d{9}$')], verbose_name='Tel\xe9fono Celular del Representante')),
                ('name_school', models.CharField(max_length=25)),
                ('address_school', models.CharField(max_length=80)),
                ('last_year', models.CharField(max_length=9)),
            ],
        ),
        migrations.CreateModel(
            name='Countries',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country', django_countries.fields.CountryField(max_length=2)),
            ],
        ),
        migrations.CreateModel(
            name='Det_Documents',
            fields=[
                ('id_detdoc', models.AutoField(primary_key=True, serialize=False)),
                ('state', models.BooleanField(default=False)),
                ('observations', models.CharField(blank=True, max_length=80, null=True)),
                ('file', models.FileField(upload_to=b'admisiones_sam/', validators=[admisiones_sam.models.validate_file_extension])),
                ('id_applications', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admisiones_sam.Applications')),
            ],
        ),
        migrations.CreateModel(
            name='Det_Reports',
            fields=[
                ('id_detreport', models.AutoField(primary_key=True, serialize=False)),
                ('value', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True)),
                ('observations', models.CharField(blank=True, max_length=150, null=True)),
                ('materia', models.CharField(blank=True, max_length=15, null=True)),
                ('id_applications', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admisiones_sam.Applications')),
            ],
        ),
        migrations.CreateModel(
            name='Documents_Type',
            fields=[
                ('id_doctype', models.AutoField(primary_key=True, serialize=False)),
                ('estado', models.BooleanField(default=True)),
                ('grade', models.CharField(max_length=50)),
                ('document', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Forms',
            fields=[
                ('id_forms', models.AutoField(primary_key=True, serialize=False)),
                ('identity_student', models.CharField(blank=True, max_length=13, null=True)),
                ('code_student', models.UUIDField(default=uuid.uuid4, editable=False, null=True)),
                ('name_student', models.CharField(max_length=25)),
                ('surname_student', models.CharField(max_length=25)),
                ('gender_student', models.CharField(choices=[(b'F', b'Femenino'), (b'M', b'Masculino')], default=b'F', max_length=1)),
                ('birth_date', models.DateField()),
                ('birth_country', django_countries.fields.CountryField(max_length=2)),
                ('country_home', django_countries.fields.CountryField(max_length=2)),
                ('address_student', models.CharField(max_length=80)),
                ('applied_grade', models.CharField(choices=[('Inicial 1 (de 2 a 3 a\xf1os)', 'Inicial 1 (de 2 a 3 a\xf1os)'), ('Inicial 2 (de 3 a 4 a\xf1os)', 'Inicial 2 (de 3 a 4 a\xf1os)'), ('Preb\xe1sica / Prekinder', 'Preb\xe1sica / Prekinder'), ('1ero de B\xe1sica / Kinder', '1ero de B\xe1sica / Kinder'), ('2do de B\xe1sica / 1st Grade', '2do de B\xe1sica / 1st Grade'), ('3ro de B\xe1sica / 2nd Grade', '3ro de B\xe1sica / 2nd Grade'), ('4to de B\xe1sica / 3rd Grade', '4to de B\xe1sica / 3rd Grade'), ('5to de B\xe1sica / 4th Grade', '5to de B\xe1sica / 4th Grade'), ('6to de B\xe1sica / 5th Grade', '6to de B\xe1sica / 5th Grade'), ('7mo de B\xe1sica / 6th Grade', '7mo de B\xe1sica / 6th Grade'), ('8vo de B\xe1sica / 7th Grade', '8vo de B\xe1sica / 7th Grade'), ('9no de B\xe1sica / 8th Grade', '9no de B\xe1sica / 8th Grade'), ('10mo de B\xe1sica / 9th Grade', '10mo de B\xe1sica / 9th Grade'), ('1ro de Bachillerato / 10th Grade', '1ro de Bachillerato / 10th Grade'), ('2do de Bachillerato / 11th Grade', '2do de Bachillerato / 11th Grade'), ('3ro de Bachillerato / 12th Grade', '3ro de Bachillerato / 12th Grade')], max_length=50, verbose_name='Nivel al que aplica')),
                ('medical_information', models.CharField(max_length=80)),
                ('name_father', models.CharField(max_length=25)),
                ('surname_father', models.CharField(max_length=25)),
                ('identity_father', models.CharField(max_length=13)),
                ('mail_father', models.EmailField(max_length=25)),
                ('phone_father', models.CharField(max_length=9, validators=[django.core.validators.RegexValidator(message='Ingrese su tel\xe9fono en el formato 022345678.', regex=b'^0+\\d{8}$')], verbose_name='Tel\xe9fono de Domicilio del Pap\xe1')),
                ('cell_father', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator(message='Ingrese su celular en el formato 0990909090.', regex=b'^0+\\d{9}$')], verbose_name='Tel\xe9fono Celular del Pap\xe1')),
                ('office_father', models.CharField(max_length=9, validators=[django.core.validators.RegexValidator(message='Ingrese su tel\xe9fono en el formato 022345678.', regex=b'^0+\\d{8}$')], verbose_name='Tel\xe9fono de Oficina del Pap\xe1')),
                ('name_mother', models.CharField(max_length=25)),
                ('surname_mother', models.CharField(max_length=25)),
                ('identity_mother', models.CharField(max_length=13)),
                ('mail_mother', models.EmailField(max_length=25)),
                ('phone_mother', models.CharField(max_length=9, validators=[django.core.validators.RegexValidator(message='Ingrese su tel\xe9fono en el formato 022345678.', regex=b'^0+\\d{8}$')], verbose_name='Tel\xe9fono de Domicilio de la Mam\xe1')),
                ('cell_mother', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator(message='Ingrese su celular en el formato 0990909090.', regex=b'^0+\\d{9}$')], verbose_name='Tel\xe9fono Celular de la Mam\xe1')),
                ('office_mother', models.CharField(max_length=9, validators=[django.core.validators.RegexValidator(message='Ingrese su tel\xe9fono en el formato 022345678.', regex=b'^0+\\d{8}$')], verbose_name='Tel\xe9fono de Oficina de la Mam\xe1')),
                ('name_tutor', models.CharField(max_length=25)),
                ('surname_tutor', models.CharField(max_length=25)),
                ('identity_tutor', models.CharField(max_length=13)),
                ('mail_tutor', models.CharField(max_length=25)),
                ('phone_tutor', models.CharField(max_length=9, validators=[django.core.validators.RegexValidator(message='Ingrese su tel\xe9fono en el formato 022345678.', regex=b'^0+\\d{8}$')], verbose_name='Tel\xe9fono de Domicilio del Representante')),
                ('cell_tutor', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator(message='Ingrese su celular en el formato 0990909090.', regex=b'^0+\\d{9}$')], verbose_name='Tel\xe9fono Celular del Representante')),
                ('office_tutor', models.CharField(max_length=9, validators=[django.core.validators.RegexValidator(message='Ingrese su tel\xe9fono en el formato 022345678.', regex=b'^0+\\d{8}$')], verbose_name='Tel\xe9fono de Oficina del Representante')),
                ('address_tutor', models.CharField(max_length=80)),
                ('date_form', models.DateTimeField(default=django.utils.timezone.now)),
                ('id_applications', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admisiones_sam.Applications')),
            ],
        ),
        migrations.CreateModel(
            name='Invoices',
            fields=[
                ('id_invoice', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=25)),
                ('surname', models.CharField(max_length=25)),
                ('identity_card', models.CharField(max_length=13)),
                ('address', models.CharField(max_length=80)),
                ('phone', models.CharField(max_length=9, validators=[django.core.validators.RegexValidator(message='Ingrese su tel\xe9fono en el formato 022345678.', regex=b'^0+\\d{8}$')], verbose_name='Tel\xe9fono de Domicilio')),
                ('cell', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator(message='Ingrese su celular en el formato 0990909090.', regex=b'^0+\\d{9}$')], verbose_name='Tel\xe9fono Celular')),
                ('id_applications', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admisiones_sam.Applications')),
            ],
        ),
        migrations.CreateModel(
            name='Mails',
            fields=[
                ('id_mails', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=50)),
                ('sender', models.CharField(max_length=50)),
                ('receiver', models.CharField(max_length=50)),
                ('text', models.CharField(max_length=250, null=True)),
                ('link', models.CharField(blank=True, max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PeriodSchool',
            fields=[
                ('per_id', models.AutoField(primary_key=True, serialize=False)),
                ('per_name', models.CharField(max_length=9)),
                ('per_state', models.BooleanField(default=True)),
                ('per_startdate', models.DateField()),
                ('per_enddate', models.DateField()),
            ],
            options={
                'ordering': ['per_name'],
            },
        ),
        migrations.CreateModel(
            name='Quotas',
            fields=[
                ('id_quotas', models.AutoField(primary_key=True, serialize=False)),
                ('grade', models.CharField(max_length=50)),
                ('max_students', models.IntegerField()),
                ('old_students', models.IntegerField()),
                ('available_students', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Reports_Tests',
            fields=[
                ('id_report', models.AutoField(primary_key=True, serialize=False)),
                ('date_report', models.DateField(null=True)),
                ('user', models.CharField(max_length=40)),
                ('state', models.CharField(max_length=15)),
                ('observations', models.CharField(max_length=150, null=True)),
                ('id_applications', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admisiones_sam.Applications')),
            ],
        ),
        migrations.CreateModel(
            name='State_Applications',
            fields=[
                ('id_state', models.AutoField(primary_key=True, serialize=False)),
                ('state', models.CharField(max_length=20)),
                ('initial_date', models.DateTimeField(default=django.utils.timezone.now, null=True)),
                ('final_date', models.DateField(blank=True, null=True)),
                ('observations', models.CharField(max_length=200, null=True)),
                ('id_applications', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admisiones_sam.Applications')),
            ],
        ),
        migrations.CreateModel(
            name='Test',
            fields=[
                ('id_test', models.AutoField(primary_key=True, serialize=False)),
                ('opportunity', models.IntegerField()),
                ('state', models.BooleanField(default=True)),
                ('id_applications', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admisiones_sam.Applications')),
            ],
        ),
        migrations.CreateModel(
            name='Tours',
            fields=[
                ('id_tour', models.AutoField(primary_key=True, serialize=False)),
                ('estado', models.BooleanField(default=True)),
                ('id_applications', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admisiones_sam.Applications')),
            ],
        ),
        migrations.CreateModel(
            name='Type_Grade',
            fields=[
                ('id_typegrade', models.AutoField(primary_key=True, serialize=False)),
                ('typegrade', models.CharField(max_length=100)),
                ('typeschool', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Type_Tests',
            fields=[
                ('id_typetest', models.AutoField(primary_key=True, serialize=False)),
                ('date_test', models.DateField(null=True)),
                ('grade', models.CharField(max_length=50)),
                ('time_test', models.TimeField(null=True)),
                ('teacher', models.CharField(max_length=50)),
                ('type_test', models.CharField(max_length=50)),
                ('state', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Type_Tours',
            fields=[
                ('id_typetour', models.AutoField(primary_key=True, serialize=False)),
                ('name_tour', models.CharField(max_length=25, null=True)),
                ('date_tour', models.DateField(null=True)),
                ('quota', models.IntegerField()),
                ('state', models.BooleanField(default=False)),
            ],
        ),
        migrations.AddField(
            model_name='tours',
            name='id_typetour',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admisiones_sam.Type_Tours'),
        ),
        migrations.AddField(
            model_name='test',
            name='id_typetest',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admisiones_sam.Type_Tests'),
        ),
        migrations.AddField(
            model_name='reports_tests',
            name='id_test',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admisiones_sam.Test'),
        ),
        migrations.AddField(
            model_name='reports_tests',
            name='id_typetest',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admisiones_sam.Type_Tests'),
        ),
        migrations.AddField(
            model_name='det_reports',
            name='id_report',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admisiones_sam.Reports_Tests'),
        ),
        migrations.AddField(
            model_name='det_reports',
            name='id_test',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admisiones_sam.Test'),
        ),
        migrations.AddField(
            model_name='det_reports',
            name='id_typetest',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admisiones_sam.Type_Tests'),
        ),
        migrations.AddField(
            model_name='det_documents',
            name='id_doctype',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admisiones_sam.Documents_Type'),
        ),
        migrations.AddField(
            model_name='applications',
            name='school_period',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admisiones_sam.PeriodSchool'),
        ),
        migrations.AddField(
            model_name='accountingdepartment',
            name='id_applications',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admisiones_sam.Applications'),
        ),
        migrations.AddField(
            model_name='academicsecretary',
            name='id_applications',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admisiones_sam.Applications'),
        ),
        migrations.AlterUniqueTogether(
            name='applications',
            unique_together=set([('name_student', 'surname_student', 'applied_grade', 'school_period')]),
        ),
    ]
